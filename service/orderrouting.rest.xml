<?xml version="1.0" encoding="UTF-8"?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.
-->

<resource xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://moqui.org/xsd/rest-api-3.xsd"
          name="order-routing" displayName="Commerce order routing REST API" version="${moqui_version}"
          description="Directing customer orders to the appropriate fulfillment center or
          location for processing and shipment.
          It involves determining the most efficient and cost-effective way to fulfill customer orders based on various factors such as inventory levels, location of the products, shipping costs, and delivery times.">

    <!-- deprecated common admin api start -->
    <resource name="login" require-authentication="anonymous-all" description="Deprecated (since maarg 4.4.0): Use admin/login">
        <method type="post"><service name="co.hotwax.auth.AuthServices.login#User"/></method>
    </resource>
    <resource name="user" description="Deprecated (since maarg 4.4.0): Use admin/user">
        <resource name="profile" description="Deprecated (since maarg 4.4.0): Use admin/user/profile">
            <method type="get"><service name="co.hotwax.util.UserServices.getUserProfile"/></method>
        </resource>
        <resource name="getAvailableTimeZones" description="Deprecated (since maarg 4.4.0): Use admin/user/getAvailableTimeZones">
            <method type="get"><service name="co.hotwax.common.CommonServices.getAvailableTimeZones"/></method>
        </resource>
        <resource name="productStore" description="Deprecated (since maarg 4.4.0): Use admin/user/productStore">
            <!--
                TODO: Need to get the User's ProductStore, as of now returing all the productStore
                As UserAccount and ProductStore are part of two different datasource
             -->
            <method type="get"><entity name="org.apache.ofbiz.product.store.ProductStore" operation="list"/></method>
        </resource>
        <resource name="sessions" description="Deprecated (since maarg 4.4.0): Use admin/user/sessions">
            <method type="post"><entity name="co.hotwax.user.UserSession" operation="create"/></method>
            <method type="get"><entity name="co.hotwax.user.UserSession" operation="list"/></method>
            <id name="userSessionId">
                <method type="put"><entity name="co.hotwax.user.UserSession" operation="update"/></method>
            </id>
        </resource>
    </resource>
    <resource name="productStores" description="Deprecated (since maarg 4.4.0): Use admin/productStores">
        <id name="productStoreId">
            <resource name="shippingMethods" description="Deprecated (since maarg 4.4.0): Use admin/productStores/${productStoreId}/shippingMethods">
                <method type="get"><entity name="co.hotwax.product.store.ProductStoreShipmentMethView" operation="list"/></method>
            </resource>
            <resource name="facilityGroups" description="Deprecated (since maarg 4.4.0): Use admin/productStores/${productStoreId}/facilityGroups">
                <method type="get"><entity name="co.hotwax.facility.ProductStoreAndFacilityGroup" operation="list"/></method>
            </resource>
        </id>
    </resource>
    <resource name="status" description="Deprecated (since maarg 4.4.0): Use admin/status">
        <method type="get"><entity name="co.hotwax.common.status.StatusItemAndType" operation="list"/></method>
    </resource>
    <resource name="enums" description="Deprecated (since maarg 4.4.0): Use admin/enums">
        <method type="get"><entity name="moqui.basic.EnumerationAndType" operation="list"/></method>
        <id name="enumId">
            <method type="get"><entity name="moqui.basic.EnumerationAndType" operation="one"/></method>
        </id>
    </resource>
    <resource name="omsenums" description="Deprecated (since maarg 4.4.0): Use admin/enums">
        <method type="get"><entity name="co.hotwax.common.enum.EnumerationAndType" operation="list"/></method>
        <id name="enumId">
            <method type="get"><entity name="co.hotwax.common.enum.EnumerationAndType" operation="one"/></method>
        </id>
    </resource>
    <resource name="facilities" description="Deprecated (since maarg 4.4.0): Use admin/facilities">
        <method type="get"><entity name="co.hotwax.facility.FacilityAndType" operation="list"/></method>
        <id name="facilityId">
            <method type="get"><entity name="co.hotwax.facility.FacilityAndType" operation="one"/></method>
        </id>
    </resource>
    <resource name="checkOmsConnection" description="Deprecated (since maarg 4.4.0): Use admin/oms/healthCheck">
        <method type="get"><service name="co.hotwax.common.CommonServices.checkOmsConnection"/></method>
    </resource>
    <resource name="serviceJobRuns" description="Deprecated (since maarg 4.4.0): Use admin/serviceJobs">
        <id name="jobName"><!--admin/serviceJobs/jobName/runs -->
            <method type="get"><entity name="moqui.service.job.ServiceJobRun" operation="list"/></method>
            <id name="jobRunId"> <!--admin/serviceJobs/${jobName}/runs/${jobRunId}" -->
                <method type="get"><entity name="moqui.service.job.ServiceJobRun" operation="one"/></method>
            </id>
            <resource name="activeJobRun" description="Deprecated (since maarg 4.4.0): Use admin/serviceJobs/${jobName}/runs/activeJobRun">
                <method type="get">
                    <entity name="moqui.service.job.ServiceJobRunLock" operation="one"/>
                </method>
            </resource>
        </id>
    </resource>
    <!-- common admin api ends -->
    <resource name="groups">
        <method type="get"><entity name="co.hotwax.order.routing.OrderRoutingGroup" operation="list"/></method>
        <method type="post"><entity name="co.hotwax.order.routing.OrderRoutingGroup" operation="store"/></method>
        <id name="routingGroupId">
            <method type="get"><entity name="co.hotwax.order.routing.OrderRoutingGroup" operation="one" masterName="default" /></method>
            <method type="post"><entity name="co.hotwax.order.routing.OrderRoutingGroup" operation="store" masterName="default"/></method>
            <method type="delete"><service name="co.hotwax.order.routing.CommonServices.delete#OrderRoutingGroup"/></method>
            <resource name="runNow">
                <method type="post"><service name="co.hotwax.order.routing.OrderRoutingServices.scheduleNow#OrderRoutingGroup"/></method>
            </resource>
            <resource name="run" description="Invoke the order routing service. This method does not trigger the scheduled job. The endpoint is created for testing a single order.">
                <method type="post"><service name="co.hotwax.order.routing.OrderRoutingServices.run#OrderRoutingGroup"/></method>
            </resource>
            <resource name="schedule">
                <method type="get"><service name="co.hotwax.order.routing.OrderRoutingServices.get#OrderRoutingGroupSchedule"/></method>
                <method type="post"><service name="co.hotwax.order.routing.OrderRoutingServices.store#OrderRoutingGroupSchedule"/></method>
            </resource>
            <resource name="clone">
                <method type="post"><service name="co.hotwax.order.routing.CommonServices.clone#OrderRoutingGroup"/></method>
            </resource>
            <resource name="routings">
                <method type="get"><entity name="co.hotwax.order.routing.OrderRouting" operation="list"/></method>
            </resource>
            <resource name="routingRuns">
                <method type="get"><entity name="co.hotwax.order.routing.OrderRoutingRun" operation="list"/></method>
            </resource>
            <resource name="raw">
                <method type="get"><entity name="co.hotwax.order.routing.OrderRoutingGroup" operation="one" masterName="raw"/></method>
            </resource>
        </id>
    </resource>
    <resource name="routings">
        <method type="post"><entity name="co.hotwax.order.routing.OrderRouting" operation="store"/></method>
        <id name="orderRoutingId">
            <method type="get"><entity name="co.hotwax.order.routing.OrderRouting" operation="one" masterName="default"/></method>
            <method type="post"><entity name="co.hotwax.order.routing.OrderRouting" operation="store" masterName="default"/></method>
            <resource name="rules">
                <method type="get"><entity name="co.hotwax.order.routing.OrderRoutingRule" operation="list"/></method>
            </resource>
            <resource name="orderFilters">
                <!-- TODO: Deprecated -->
                <method type="get"><entity name="co.hotwax.order.routing.OrderFilterCondition" operation="list"/></method>
                <method type="post"><entity name="co.hotwax.order.routing.OrderFilterCondition" operation="store"/></method>
                <!-- -->
                <method type="delete"><entity name="co.hotwax.order.routing.OrderFilterCondition" operation="delete"/></method>
            </resource>
            <resource name="routingRuns">
                <method type="get"><entity name="co.hotwax.order.routing.OrderRoutingRun" operation="list"/></method>
            </resource>
            <resource name="clone">
                <method type="post"><service name="co.hotwax.order.routing.CommonServices.clone#OrderRouting"/></method>
            </resource>
            <resource name="sql">
                <method type="get"><service name="co.hotwax.order.routing.OrderRoutingServices.get#OrderFilterSql"/></method>
            </resource>
            <resource name="orderCount">
                <method type="get"><service name="co.hotwax.order.routing.OrderRoutingServices.get#RoutingOrderCount"/></method>
            </resource>
        </id>
    </resource>
    <resource name="rules">
        <method type="post"><entity name="co.hotwax.order.routing.OrderRoutingRule" operation="store"/></method>
        <id name="routingRuleId">
            <method type="get"><entity name="co.hotwax.order.routing.OrderRoutingRule" operation="one" masterName="default"/></method>
            <method type="post"><entity name="co.hotwax.order.routing.OrderRoutingRule" operation="store" masterName="default"/></method>
            <resource name="inventoryFilters">
                <!-- TODO: Deprecated -->
                <method type="get"><entity name="co.hotwax.order.routing.OrderRoutingRuleInvCond" operation="list"/></method>
                <method type="post"><entity name="co.hotwax.order.routing.OrderRoutingRuleInvCond" operation="store"/></method>
                <!--  -->
                <method type="delete"><entity name="co.hotwax.order.routing.OrderRoutingRuleInvCond" operation="delete"/></method>
            </resource>
            <resource name="actions">
                <!-- TODO: Deprecated -->
                <method type="get"><entity name="co.hotwax.order.routing.OrderRoutingRuleAction" operation="list"/></method>
                <method type="post"><entity name="co.hotwax.order.routing.OrderRoutingRuleAction" operation="store"/></method>
                <!--  -->
                <method type="delete"><entity name="co.hotwax.order.routing.OrderRoutingRuleAction" operation="delete"/></method>
            </resource>
            <resource name="clone">
                <method type="post"><service name="co.hotwax.order.routing.CommonServices.clone#OrderRoutingRule"/></method>
            </resource>
            <resource name="sql">
                <method type="get"><service name="co.hotwax.order.routing.OrderRoutingServices.get#OrderRoutingRuleSql"/></method>
            </resource>
        </id>
    </resource>
    <resource name="orders">
        <id name="orderId">
            <resource name="reject">
                <method type="post">
                    <service name="co.hotwax.order.routing.OrderRoutingServices.reject#OrderItems"/>
                </method>
            </resource>
            <resource name="routing-history">
                <resource name="recent">
                    <method type="get">
                        <service name="co.hotwax.order.routing.OrderRoutingServices.get#RecentRoutingHistory"/>
                    </method>
                </resource>
            </resource>
        </id>
    </resource>
</resource>